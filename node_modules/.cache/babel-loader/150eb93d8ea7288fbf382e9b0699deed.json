{"ast":null,"code":"var clientID=\"70aa26180af6424caf987510e47c6173\";//before step 97 use the following line of code\n//const redirectURI = \"http://localhost:3000/\";\n//at step 97 use the following with YOUR selected domain name I used MINE.\n//follow the video NOT the written instructions for deployment. I used my VSCode Terminal not Node or powershell\n//also if needed you may have to run 'powershell' as administrator and change restrictions. \nvar redirectURI='http://unable-sky.surge.sh';var accessToken;var Spotify={getAccessToken:function getAccessToken(){if(accessToken){return accessToken;}// check for access token match\nvar accesssTokenMatch=window.location.href.match(/access_token=([^&]*)/);var expiresInMatch=window.location.href.match(/expires_in=([^&]*)/);if(accesssTokenMatch&&expiresInMatch){accessToken=accesssTokenMatch[1];var expiresIn=Number(expiresInMatch[1]);// wipes the access token and URL parameters after they expire\nwindow.setTimeout(function(){return accessToken='';},expiresIn*1000);window.history.pushState('Access Token',null,'/');return accessToken;}else{var accessUrl=\"https://accounts.spotify.com/authorize?client_id=\".concat(clientID,\"&response_type=token&scope=playlist-modify-public&redirect_uri=\").concat(redirectURI);window.location=accessUrl;}},search:function search(term){var accessToken=Spotify.getAccessToken();return fetch(\"https://api.spotify.com/v1/search?type=track&q=\".concat(term),{headers:{Authorization:\"Bearer \".concat(accessToken)}}).then(function(response){return response.json();}).then(function(jsonResponse){if(!jsonResponse.tracks){return[];}return jsonResponse.tracks.items.map(function(track){return{id:track.id,name:track.name,artists:track.artists[0],album:track.album.name,uri:track.uri};});});},//note in the line of code below the instructor mispells savePlaylist as savePlayList note capital \"l\"\nsavePlaylist:function savePlaylist(name,trackUris){if(!name||!trackUris.length){return;}var accessToken=Spotify.getAccessToken();var headers={Authorization:\"Bearer \".concat(accessToken)};var userId;return fetch('https://api.spotify.com/v1/me',{headers:headers}).then(function(response){return response.json();}).then(function(jsonResponse){userId=jsonResponse.id;return fetch(\"https://api.spotify.com/v1/users/\".concat(userId,\"/playlists\"),{headers:headers,method:'POST',body:JSON.stringify({name:name})}).then(function(response){return response.json();}).then(function(jsonResponse){var playlistId=jsonResponse.id;return fetch(\"https://api.spotify.com/v1/users/\".concat(userId,\"/playlists/\").concat(playlistId,\"/tracks\"),{headers:headers,method:'POST',body:JSON.stringify({uris:trackUris})});});});}};export default Spotify;","map":{"version":3,"sources":["C:/Users/Rick/Jammming/jammming/src/util/Spotify.js"],"names":["clientID","redirectURI","accessToken","Spotify","getAccessToken","accesssTokenMatch","window","location","href","match","expiresInMatch","expiresIn","Number","setTimeout","history","pushState","accessUrl","search","term","fetch","headers","Authorization","then","response","json","jsonResponse","tracks","items","map","track","id","name","artists","album","uri","savePlaylist","trackUris","length","userId","method","body","JSON","stringify","playlistId","uris"],"mappings":"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","sourcesContent":["const clientID = \"70aa26180af6424caf987510e47c6173\";\r\n//before step 97 use the following line of code\r\n//const redirectURI = \"http://localhost:3000/\";\r\n//at step 97 use the following with YOUR selected domain name I used MINE.\r\n//follow the video NOT the written instructions for deployment. I used my VSCode Terminal not Node or powershell\r\n//also if needed you may have to run 'powershell' as administrator and change restrictions. \r\nconst redirectURI = 'http://unable-sky.surge.sh';\r\n\r\nlet accessToken;\r\n\r\nconst Spotify = {\r\n    getAccessToken() {\r\n        if(accessToken){\r\n            return accessToken;\r\n        }\r\n        // check for access token match\r\n        const accesssTokenMatch = window.location.href.match(/access_token=([^&]*)/);\r\n        const expiresInMatch = window.location.href.match(/expires_in=([^&]*)/);\r\n\r\n        if (accesssTokenMatch && expiresInMatch) {\r\n            accessToken = accesssTokenMatch[1];\r\n            const expiresIn = Number(expiresInMatch[1]);\r\n\r\n            // wipes the access token and URL parameters after they expire\r\n            window.setTimeout(() => accessToken = '', expiresIn * 1000);\r\n            window.history.pushState('Access Token', null, '/');\r\n            return accessToken;\r\n        } else {\r\n            const accessUrl = `https://accounts.spotify.com/authorize?client_id=${clientID}&response_type=token&scope=playlist-modify-public&redirect_uri=${redirectURI}`;\r\n            window.location = accessUrl;\r\n        }\r\n    },\r\n\r\n    search(term){\r\n        const accessToken = Spotify.getAccessToken();\r\n        return fetch(`https://api.spotify.com/v1/search?type=track&q=${term}`, {\r\n            headers: {\r\n                Authorization: `Bearer ${accessToken}`\r\n            }\r\n        }).then(response => {\r\n            return response.json();\r\n        }).then(jsonResponse => {\r\n            if (!jsonResponse.tracks) {\r\n                return [];\r\n            }\r\n            return jsonResponse.tracks.items.map(track => ({\r\n                id: track.id,\r\n                name: track.name,\r\n                artists: track.artists[0],\r\n                album: track.album.name,\r\n                uri: track.uri\r\n\r\n            }));\r\n        });\r\n    },\r\n//note in the line of code below the instructor mispells savePlaylist as savePlayList note capital \"l\"\r\n    savePlaylist(name, trackUris) {\r\n        if(!name || !trackUris.length) {\r\n            return;\r\n        }\r\n        const accessToken = Spotify.getAccessToken();\r\n        const headers = { Authorization: `Bearer ${accessToken}` };\r\n        let userId;\r\n\r\n        return fetch('https://api.spotify.com/v1/me', { headers: headers }\r\n        ).then(response => response.json()\r\n        ).then (jsonResponse => {\r\n            userId = jsonResponse.id;\r\n            return fetch (`https://api.spotify.com/v1/users/${userId}/playlists`, \r\n            {\r\n                headers: headers,\r\n                method: 'POST',\r\n                body: JSON.stringify({ name: name })\r\n            }).then(response => response.json()\r\n            ).then(jsonResponse => {\r\n                const playlistId = jsonResponse.id;\r\n                return fetch (`https://api.spotify.com/v1/users/${userId}/playlists/${playlistId}/tracks`,{\r\n                    headers: headers,\r\n                    method: 'POST',\r\n                    body:  JSON.stringify({ uris: trackUris })\r\n                })\r\n            })\r\n        })\r\n    }\r\n}\r\nexport default Spotify;"]},"metadata":{},"sourceType":"module"}